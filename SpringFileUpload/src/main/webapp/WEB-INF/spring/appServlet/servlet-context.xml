<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/jms  
    http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/*" location="/resources/" cache-period="2"/>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="mysql" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.journaldev.spring.model.Student</beans:value>
				<beans:value>com.journaldev.spring.model.Employee</beans:value>
				<beans:value>com.journaldev.spring.model.DBFiles</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
				<beans:prop key="hibernate.enable_lazy_load_no_trans">true</beans:prop>

			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- <beans:bean id="personDAO" class="com.journaldev.spring.dao.StudentDAOImpl"> 
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" 
		/> </beans:bean> <beans:bean id="personService" class="com.journaldev.spring.service.PersonServiceImpl"> 
		<beans:property name="personDAO" ref="personDAO"></beans:property> </beans:bean> -->
	<context:component-scan base-package="com.journaldev.spring" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="100000" />

	</beans:bean>

	<!-- <beans:bean id="connectionFactory"
		class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<beans:property name="brokerURL" value="tcp://10.188.36.14:61616" />
	</beans:bean> -->

	<!-- To receive JMS message -->
	<!-- <jms:listener-container container-type="default" connection-factory="connectionFactory" 
		acknowledge="auto"> <jms:listener destination="testQueue" ref="simpleMessageListener" 
		method="onMessage" /> </jms:listener-container> -->


	<!-- <beans:bean id="simpleMessageListener" class="com.journaldev.spring.jms.SimpleMessageListener" 
		/> -->




	<!-- To send JMS message -->
	<!-- <beans:bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<beans:property name="connectionFactory" ref="connectionFactory" />
		<beans:property name="defaultDestinationName" value="testQueue" />
	</beans:bean>
	<beans:bean id="simpleMessageSender"
		class="com.journaldev.spring.jms.SimpleMessageSender">
		<beans:property name="jmsTemplate" ref="jmsTemplate" />
	</beans:bean> -->



	<context:component-scan base-package="com.journaldev.spring.*" />

	<beans:bean id="loginValidator" class="com.demo.springmvc.validator.LoginValidator" />


	<interceptors>
		<beans:bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="siteLanguage" />
		</beans:bean>
	</interceptors>

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en"></beans:property>
		<beans:property name="cookieName" value="localeCookie"></beans:property>
		<beans:property name="cookieMaxAge" value="12"></beans:property>
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="/WEB-INF/views/validation" />
		<!-- refersh for every 1 sec while change on prop file -->
		<beans:property name="cacheSeconds" value="1"></beans:property>
	</beans:bean>



</beans:beans>
